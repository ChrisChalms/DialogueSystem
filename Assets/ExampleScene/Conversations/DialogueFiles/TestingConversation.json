{
	"conversation":
    [
    	// Conversation
		{
			"id": 1,
			//"nextId": 2,
			"characterSpritesName": "TestCharacter",
			"startingSprite": "Default",
			"sentences":
            [
            	"I'm not part of this game, I'm just here to test some features.",
            	"Like options with actions!"
			],
			"options":
			[
				{
					"nextId": 2,
					"text": "Log actions then proceed",
					"selectedActions":[ "logNormal", "logAWarning", "logAnError" ]
				},
				{
					"nextId": 2,
					"text": "Progress without an action"
				},
				{
					"text": "End conversation action",
					"selectedActions": [ "finishConversation" ]
				}
			]
		},
		{
			"id": 2,
			"characterSpritesName": "TestCharacter",
			"canBeUsedAsStartingPoint": false,
			"startingSprite": "Default",
			"sentences":
			[
				"I can even perform those actions at any point during the dialogue, I'll perform all of the logging actions again<speed=3>...<performAction=logNormal><performAction=logAWarning><performAction=logAnError>.",
				"I can even pass messages or targets to those actions<actionWithMessage=logNormal>Unique message</actionWithMessage>!",
				"Or just log using the custom tags<log=A normal log message><logWarning=A warning!><logError=An error log!>.",
				"I can send messages to external objects<sendMessage=Decorations/Background/Cloud2>ChangeColour</sendMessage>, to say<sendMessage=Decorations/Background/Cloud2>ResetColour</sendMessage>, change the <sendMessage=Decorations/Background/Cloud2>ChangeColour</sendMessage>colour <sendMessage=Decorations/Background/Cloud2>ResetColour</sendMessage>of a <sendMessage=Decorations/Background/Cloud2>ChangeColour</sendMessage>cloud<sendMessage=Decorations/Background/Cloud2>ResetColour</sendMessage>.",
				"I can <action=changeCloudColour>do the <action=resetCloudColoud>same thing<actionWithMessage=sendMessageToCloud>changeColour</actionWithMessage> but using <actionWithTarget=resetAColour>Decorations/Background/Cloud2</actionWithTarget>actions<action=changeCloudColour>. Some of those of those actions<action=resetCloudColoud> used passed messages and targets for more control.",
				"You see my sprite? I can change that in at any point during the conversation, like this<speed=3>...<changeSprite=TestCharacter>NoHat</changeSprite><speed=1> See, no hat!",
				"I can even get rid of it completely<hideSprite>.<wait=1.5> Or change it again and bring it back<changeSprite=TestCharacter>Default</changeSprite>.",
				"My conversation was loaded when you walked over my trigger, using the handy event handler.",
				"I can remember number shorts<registerShort=testShort>1</registerShort>, ints<registerInt=testInt>2</registerInt>, longs<registerLong=testLong>3</registerLong>, floats<registerFloat=testFloat>4</registerFloat>, bools<registerBool=testBool>true</registerBool>, and strings<registerString=testString>Five</registerString>.",
				"I can then recall them: shorts(<retrieveShort=testShort>), ints(<retrieveInt=testInt>), longs(<retrieveLong=testLong>), floats(<retrieveFloat=testFloat>), bools(<retrieveBool=testBool>), and strings(<retrieveString=testString>).",
				"Or forget a variable I remembered<removeVariable=testBool>.",
				"I can wait for 1 <wait=1>second, 2<wait=2> seconds, or any really",
				"<speed=0.1>I can go fast............",
				"<speed=3>Or slow...",				
				"There's even a handy logger that let's you know what's going with different log levels if you just want to see warnings or errors.",
				"All without any code! If you want to see the rest of the example game, go talk to the Wise Wizard"
			]
		}
	],

	// Actions
	"actions":
	[
		// Log a message
		{
			"name": "logNormal",
			"type": "log",
			"message": "A normal log message"
		},

		// Log a warning
		{
			"name": "logAWarning",
			"type": "logWarning",
			"message": "A warning log message"
		},

		// Log an error
		{
			"name": "logAnError",
			"type": "logError",
			"message": "Log error action. Don't worry, this was supposed to happen!"
		},

		// Stop the conversation
		{
			"name": "finishConversation",
			"type": "close conversation"
		},

		// Change cloud colour with a message
		{
			"name": "changeCloudColour",
			"type": "sendMessage",
			"target": "Decorations/Background/Cloud2",
			"message": "ChangeColour"
		},

		// Reset the cloud colour with a message
		{
			"name": "resetCloudColoud",
			"type": "sendMessage",
			"target": "Decorations/Background/Cloud2",
			"message": "ResetColour"
		},

		// Send a message to the cloud, leave the message up to the tag
		{
			"name": "sendMessageToCloud",
			"type": "sendMessage",
			"target": "Decorations/Background/Cloud2"
		},

		// Send a resetColour message, leave the target up to the tag
		{
			"name": "resetAColour",
			"type": "sendMessage",
			"message": "ResetColour"
		}
	]
}